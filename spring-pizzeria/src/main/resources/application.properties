spring.application.name=spring-pizzeria

#1-inserisco i dati per il collegamento con il db
spring.datasource.url=jdbc:mysql://localhost:3306/db_pizzeria
spring.datasource.username=root
spring.datasource.password=Myssqqll!!

#2-proprietà Hibernate
#Hibernate ha diverse opzioni che ci permettono di creare/aggiornare il db
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#Hibernate ddl auto (create, create-drop, validate, update, none)
#scegliamo come si deve comportare il db tra le azioni (create, create-drop, validate, update, none), quando avviamo l'applicazione
#create: crea le tabelle ogni volta che l'applicazione parte, cancellando quelle esistenti (se già presenti); i dati esistenti vengono persi; non elimina il database alla chiusura dell'app; per popolare la tabella chiama il file import.sql in "resources"
#create-drop: uguale a create, ma in più elimina le tabelle quando l'applicazione si arresta. Questo significa che al riavvio dell'app non ci saranno più dati nel database.
#validate: non modifica il database ma cntrolla solo che la struttura del database sia coerente con le entity; se ci sono discrepanze (es. manca una colonna), lancia un errore
#update: aggiorna lo schema solo quando è necessario, se uno schema non esiste lo crea, se uno schema ha cambiamenti lo va a validare; aggiorna la struttura del database per riflettere i cambiamenti nel codice delle entity senza perdere i dati; se aggiungi un nuovo campo in un'entità, Hibernate lo aggiungerà alla tabella corrispondente, ma non rimuove colonne esistenti.
spring.jpa.hibernate.ddl-auto=update
#le configurazioni sopra non sono consigliate in fase di produzione ma solo in fase di sviluppo
#in fase di produzione meglio non fare nulla (vedi sotto)
#se non volgiamo modificare l'attuale schema
#spring.jpa.generate-ddl=false

#3-formattazione delle date
spring.mvc.format.date=dd/MM/yyyy
spring.mvc.format.time=HH:mm:ss
spring.mvc.format.date-time=dd/MM/yyyy HH:mm:ss

#4-info utili per il testing (poi le rimuoveremo)
#l'esecuzione di sql si vede in console (erorri, cosa sta chiamando, cosa sta provando ad eseguire ecc..)
#fammi vedere sql
spring.jpa.show-sql=true
#e formattalo secondo hibernate
spring.jpa.properties.hibernate.format_sql=true 